# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
    build:
        docker:
            # specify the version you desire here
            - image: circleci/openjdk:11.0.12

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # - image: circleci/postgres:9.4
        working_directory: ~/repo

        environment:
            # Customize the JVM maximum heap limit
            JVM_OPTS: -Xmx3200m
            TERM: dumb

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "pom.xml" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            - run: sudo apt-get update
            - run: sudo apt-get install maven
            - run: mvn dependency:go-offline

            - save_cache:
                paths:
                    - ~/.m2
                key: v1-dependencies-{{ checksum "pom.xml" }}

            # run tests!

            - run: mvn test -Denv=prod
            #- run: mvn allure:report

#            - run:
#                  shell: /bin/bash
#                  command: |
#                      cd ~/repo
#                      mvn test
#                      mvn allure:report
            - run:
                  name: generate report
                  command: mvn allure:report
                  when: always
            - run:
                name: Save test results
                command: |
                  mkdir -p ~/test-results
                  find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/ \;
                when: always

            - store_test_results:
                path: ~/test-results

            - store_artifacts:
                  path: ~/repo/target/site/allure-maven-plugin
                  destination: reports
